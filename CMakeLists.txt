cmake_minimum_required (VERSION 2.8.4)
project (Tunator)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${Tunator_SOURCE_DIR}/build)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall -Wextra -g")

if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8)
        message(FATAL_ERROR "GCC version >=4.8 required.")
    endif()
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4)
        message(FATAL_ERROR "Clang version >=3.4 required.")
    endif()
else()
    message(WARNING "Your compiler (${CMAKE_CXX_COMPILER_ID}) has not been tested on this project. Only Clang and GCC has been tested. Please report any problems at the project page on GitHub.")
endif()

#Only tested with versions 1.55 and 1.56
find_package(Boost 1.54.0 COMPONENTS system regex coroutine context thread REQUIRED)
include_directories(${Boost_INCLUDE_DIR})

if(APPLE)
  set(OPENSSL_ROOT_DIR "/usr/local/opt/openssl")
endif()

include(CMakeLists-Simple-WebSocket.txt)
include(CMakeLists-jsoncpp.txt)

#set(SIMPLEWEB_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/3rdparty/Simple-WebSocket-Server")
#TODO: add requirement for version 1.0.1g (can it be done in one line?)
find_package(OpenSSL REQUIRED)
include_directories(${OPENSSL_INCLUDE_DIR})
#include_directories(${SIMPLEWEB_INCLUDE_DIR})

find_package(Threads REQUIRED)

include_directories(.)

add_executable(main main.cpp tunator.cpp)
add_dependencies(main SimpleWebSocketServer)
add_dependencies(main jsoncpp)
#target_link_libraries(main ${jsoncpp_LIBRARY_DIR})
target_link_libraries(main ${jsoncpp_LIBRARIES})
target_link_libraries(main ${Boost_LIBRARIES})
target_link_libraries(main ${OPENSSL_LIBRARIES})
target_link_libraries(main ${CMAKE_THREAD_LIBS_INIT})

enable_testing()
add_subdirectory(test)
